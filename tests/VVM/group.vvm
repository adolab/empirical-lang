; mimic a Dataframe as struct-of-arrays
$0 = {Sv, i64v, f64v}
$1 = {Sv, i64v}
alloc $0 %0

; set strings
@0 = "A"
@1 = "B"
@2 = "C"
@3 = "D"
alloc Sv %2
append @0 Ss %2
append @1 Ss %2
append @0 Ss %2
append @2 Ss %2
append @2 Ss %2
append @3 Ss %2
append @1 Ss %2
append @0 Ss %2
append @1 Ss %2
append @2 Ss %2
member %0 0 %1
assign %2 Sv %1

; set integers
alloc i64v %4
append 7 i64s %4
append 2 i64s %4
append 3 i64s %4
append 4 i64s %4
append 3 i64s %4
append 5 i64s %4
append 3 i64s %4
append 3 i64s %4
append 3 i64s %4
append 3 i64s %4
member %0 1 %3
assign %4 i64v %3

; set floats
@4 = 1.1
@5 = 2.2
@6 = 3.3
alloc f64v %6
append @4 f64s %6
append @4 f64s %6
append @4 f64s %6
append @4 f64s %6
append @5 f64s %6
append @5 f64s %6
append @5 f64s %6
append @6 f64s %6
append @6 f64s %6
append @6 f64s %6
member %0 2 %5
assign %6 f64v %5

; print DF
repr %0 $0 %7
write %7

;;        
;; A 7 1.1
;; B 2 1.1
;; A 3 1.1
;; C 4 1.1
;; C 3 2.2
;; D 5 2.2
;; B 3 2.2
;; A 3 3.3
;; B 3 3.3
;; C 3 3.3

; create keys as first two columns
alloc $1 %10
member %0 0 %11
member %10 0 %12
assign %11 Sv %12
member %0 1 %13
member %10 1 %14
assign %13 i64v %14

; group
group $0 %0 $1 %10 $0 %30 %31 %32

; print each grouped DF
@7 = 0.0
member %30 2 %41
assign 0 i64s %50
loop:
lt_i64s_i64s %50 %32 %51
bfalse %51 next
member %31 %50 %52
repr %52 $0 %53
write %53
append @7 f64s %41
add_i64s_i64s %50 1 %50
br loop
next:

;;        
;; A 7 1.1
;;        
;; B 2 1.1
;;        
;; A 3 1.1
;; A 3 3.3
;;        
;; C 4 1.1
;;        
;; C 3 2.2
;; C 3 3.3
;;        
;; D 5 2.2
;;        
;; B 3 2.2
;; B 3 3.3

; print initial DF
repr %30 $0 %40
write %40

;;        
;; A 7 0.0
;; B 2 0.0
;; A 3 0.0
;; C 4 0.0
;; C 3 0.0
;; D 5 0.0
;; B 3 0.0
