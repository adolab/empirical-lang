#.rst:
# FindGenVVM
# ---------
#
# Find ``gen_vvm`` executable and provide a macro to generate custom build rules.
#
# The module defines the following variables:
#
# ``GenVVM_EXECUTABLE``
#   path to the ``gen_vvm`` program
#
# ``GenVVM_FOUND``
#   true if the program was found
#
# If ``gen_vvm`` is found, the module defines the macro:
#
#   GenVVM_TARGET(<OutputDir>)
#
# which will create a custom rule to generate the header files.
#
# The macro defines the following variables:
#
# ``GenVVM_DEFINED``
#   true if the macro ran successfully
#
# ``GenVVM_OUTPUTS``
#   All header files generated by gen_vvm
#
# Example usage:
#
# .. code-block:: cmake
#
#   find_package(GenVVM)
#   GenVVM_TARGET(${CMAKE_CURRENT_BINARY_DIR}/src/VVM)
#   add_executable(Foo foo.cpp ${GenVVM_OUTPUTS})

find_program(GenVVM_EXECUTABLE gen_vvm.py
             PATHS ${CMAKE_CURRENT_SOURCE_DIR}/src/VVM
             DOC "path to the gen_vvm executable")
mark_as_advanced(GenVVM_EXECUTABLE)

if(GenVVM_EXECUTABLE)
  #============================================================
  # GenVVM_TARGET (public macro)
  #============================================================
  #
  macro(GenVVM_TARGET GenVVMOutputDir)
    set(GenVVM_TARGET_outputs
        ${GenVVMOutputDir}/builtins.h
        ${GenVVMOutputDir}/disassembler.h
        ${GenVVMOutputDir}/dispatch.h
        ${GenVVMOutputDir}/opcodes.h
        ${GenVVMOutputDir}/types.h)

    message(STATUS "GenVVM on CMake builds to ${GenVVMOutputDir}")

    add_custom_command(OUTPUT ${GenVVM_TARGET_outputs}
      COMMAND python ${GenVVM_EXECUTABLE} -d ${GenVVMOutputDir}
      DEPENDS ${GenVVM_EXECUTABLE}
      VERBATIM
      COMMENT "[GenVVM] Building VVM headers"
      WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})

    # define target variables
    set(GenVVM_DEFINED TRUE)
    set(GenVVM_OUTPUTS ${GenVVM_TARGET_outputs})

  endmacro()
  #
  #============================================================

endif()

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(GenVVM REQUIRED_VARS GenVVM_EXECUTABLE)
